package GUIs;

import Controllers.DatabaseDriver;
import Controllers.FrameController;
import Controllers.Learner;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rgalo
 */
public class AttendHearingsGUI extends javax.swing.JFrame {

    private Vector<Vector<Object>> detentionLearnersInVector = new Vector<>();
    private Vector<Vector<Object>> absentLearnersInVector = new Vector<>();
    private ArrayList<Learner> absentLearners = new ArrayList<>();

    /**
     * Creates new form ContributorRecordGUI
     */
    public AttendHearingsGUI() {
        initComponents();
        String[] empty = {"", "", ""};
        searchAbsentLearner("", "", "");
        FrameController.setLayout(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        txfGrade = new javax.swing.JTextField();
        txfSName = new javax.swing.JTextField();
        lblFirstName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        txfFName = new javax.swing.JTextField();
        lblCampaignName = new javax.swing.JLabel();
        lblDescriptor = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        lblDescriptor4 = new javax.swing.JLabel();
        tblDonations2 = new javax.swing.JScrollPane();
        tblAttendedDetentions = new javax.swing.JTable();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        lblDescriptor1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAbsentLearners = new javax.swing.JTable();
        btnSaveAttendances = new javax.swing.JButton();
        btnLearners = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        btnDetentions = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        lblTitle.setText("Attended Disciplinary Hearings");

        txfGrade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txfGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfGradeActionPerformed(evt);
            }
        });
        txfGrade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfGradeKeyTyped(evt);
            }
        });

        txfSName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txfSName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfSNameActionPerformed(evt);
            }
        });
        txfSName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfSNameKeyTyped(evt);
            }
        });

        lblFirstName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFirstName.setText("Surame: ");

        lblLastName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblLastName.setText("Grade:");

        txfFName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txfFName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfFNameActionPerformed(evt);
            }
        });
        txfFName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfFNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfFNameKeyTyped(evt);
            }
        });

        lblCampaignName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCampaignName.setText("First Name:");

        lblDescriptor.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblDescriptor.setText("Find the learners marked absent:");

        btnClear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnClear.setText("Clear Fields");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnInsert.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnInsert.setText("Log this learner as absent");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescriptor, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(lblCampaignName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txfSName)
                            .addComponent(txfGrade)
                            .addComponent(txfFName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)))
                    .addComponent(btnInsert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lblDescriptor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCampaignName)
                    .addComponent(txfFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txfSName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastName)
                    .addComponent(txfGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1.setLayer(txfGrade, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txfSName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblFirstName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblLastName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txfFName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblCampaignName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblDescriptor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnClear, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnInsert, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblDescriptor4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblDescriptor4.setText("Details of the disciplinary hearings:");

        tblAttendedDetentions.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblAttendedDetentions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Surname", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAttendedDetentions.setRowHeight(25);
        tblDonations2.setViewportView(tblAttendedDetentions);

        javax.swing.GroupLayout jLayeredPane5Layout = new javax.swing.GroupLayout(jLayeredPane5);
        jLayeredPane5.setLayout(jLayeredPane5Layout);
        jLayeredPane5Layout.setHorizontalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tblDonations2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lblDescriptor4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE))
                .addContainerGap())
        );
        jLayeredPane5Layout.setVerticalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                .addComponent(lblDescriptor4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tblDonations2, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                .addContainerGap())
        );
        jLayeredPane5.setLayer(lblDescriptor4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(tblDonations2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblDescriptor1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblDescriptor1.setText("Learners who did not attend their hearings:");

        tblAbsentLearners.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblAbsentLearners.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Surname", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAbsentLearners.setRowHeight(25);
        jScrollPane1.setViewportView(tblAbsentLearners);

        btnSaveAttendances.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSaveAttendances.setText("Save Attendances and return to Home");
        btnSaveAttendances.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAttendancesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescriptor1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSaveAttendances, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addComponent(lblDescriptor1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSaveAttendances)
                .addContainerGap())
        );
        jLayeredPane2.setLayer(lblDescriptor1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(btnSaveAttendances, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnLearners.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLearners.setText("Learners");
        btnLearners.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLearnersActionPerformed(evt);
            }
        });

        btnHome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnDetentions.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDetentions.setText("Detentions");
        btnDetentions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetentionsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLayeredPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLayeredPane1))
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnLearners, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDetentions, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLayeredPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLearners)
                        .addComponent(btnDetentions)
                        .addComponent(btnHome)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLayeredPane1)
                    .addComponent(jLayeredPane5)
                    .addComponent(jLayeredPane2)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveAttendancesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAttendancesActionPerformed
        dispose();
        //Update database

        //Remove absent learners from vector storing learners who have detention
        searchAbsentLearner("", "", "");
        for (Learner n : absentLearners) {
            for (int i = 0; i < detentionLearnersInVector.size(); i++) {
                Vector<Object> row = detentionLearnersInVector.get(i);
                if (n.getFName().equals("" + row.get(0))
                        && n.getSName().equals("" + row.get(1))
                        && n.getGrade() == Integer.parseInt("" + row.get(2))) {

                    boolean removedAbsentLearner = detentionLearnersInVector.remove(row);
                    System.out.println("Found " + n + "\tRemoval successful? " + removedAbsentLearner);
                }
            }
        }

        //Update each of the remaining in vector to attended = true in database
        for (int i = 0; i < detentionLearnersInVector.size(); i++) {
            Vector<Object> row = detentionLearnersInVector.get(i);
            String fName = "" + row.get(0);
            String sName = "" + row.get(1);
            String grade = "" + row.get(2);
            String sqlAttend = "UPDATE tblDetention SET tblDetention.Attended = TRUE, DetentionDate = NOW()\n"
                    + "WHERE tblDetention.DetentionID IN ( \n"
                    + "SELECT TOP 1 DetentionID \n"
                    + "FROM tblDetention, tblLearner \n"
                    + "WHERE tblLearner.LearnerID = tblDetention.LearnerID \n"
                    + "AND tblDetention.Attended = FALSE \n"
                    + "AND (tblDetention.OffenceID = 8) \n"
                    + "AND tblLearner.FName LIKE '" + fName + "*' \n"
                    + "AND tblLearner.SName LIKE '" + sName + "*' \n"
                    + "AND tblLearner.Grade LIKE '" + grade + "*');";
            int update = DatabaseDriver.update(sqlAttend);
            System.out.println("Update result: learner# (0 or row count)" + i + " " + update);
        }

        //Give absent learners another detention , OffenceID, OffenceDate, FridayDetention, Comment, Attended
        for (Learner n : absentLearners) {
            String sqlMissed = "INSERT INTO tblDetention(LearnerID, OffenceID, OffenceDate, FridayDetention, Comment, Attended) \n"
                    + "SELECT TOP 1 LearnerID, 5, NOW(), FALSE, 'Missed Hearing', FALSE FROM tblLearner \n"
                    + "WHERE tblLearner.FName LIKE '" + n.getFName() + "' \n"
                    + "AND tblLearner.SName LIKE '" + n.getSName() + "' \n"
                    + "AND tblLearner.Grade = " + n.getGrade() + ";";
            boolean insert = DatabaseDriver.insert(sqlMissed);
            System.out.println("Insert result for missed " + n + insert);
        }

        HomeGUI newAssign = new HomeGUI();
        newAssign.addFridays();
        newAssign.addDisciplinaries();
    }//GEN-LAST:event_btnSaveAttendancesActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        if (detentionLearnersInVector.size() == 1) {
            System.out.println("Marking learner as absent");
            String fName = (String) detentionLearnersInVector.get(0).get(0);
            String sName = (String) detentionLearnersInVector.get(0).get(1);
            int grade = Integer.parseInt((String) detentionLearnersInVector.get(0).get(2));
            Learner absentee = new Learner(fName, sName, grade);

            boolean found = false;
            for (Learner n : absentLearners) {
                if (n.equals(absentee)) {
                    found = true;
                }
            }
            if (found) {
                JOptionPane.showMessageDialog(null, "This learner has already been marked absent.", "Invalid Input Error", ERROR_MESSAGE);
            } else {
                absentLearners.add(absentee);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Only 1 learner at a time.", "Invalid Input Error", ERROR_MESSAGE);
        }
        populateAbsentLearnersTable();
        btnClear.doClick();
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txfFName.setText("");
        txfSName.setText("");
        txfGrade.setText("");
        txfFName.requestFocus();
        searchAbsentLearner("", "", "");
    }//GEN-LAST:event_btnClearActionPerformed

    private void txfFNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfFNameKeyTyped
        String fName = txfFName.getText();
        String sName = txfSName.getText();
        String grade = txfGrade.getText();
        char ch = evt.getKeyChar();
        if (Character.isLetter(ch) || ch == ' ') {
            fName += ch;
        }
        searchAbsentLearner(fName, sName, grade);
    }//GEN-LAST:event_txfFNameKeyTyped

    private void txfFNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfFNameKeyPressed

    }//GEN-LAST:event_txfFNameKeyPressed

    private void txfFNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfFNameActionPerformed
        btnInsert.doClick();
    }//GEN-LAST:event_txfFNameActionPerformed

    private void txfSNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfSNameKeyTyped
        String fName = txfFName.getText();
        String sName = txfSName.getText();
        String grade = txfGrade.getText();
        char ch = evt.getKeyChar();
        if (Character.isLetter(ch) || ch == ' ') {
            sName += ch;
        }
        searchAbsentLearner(fName, sName, grade);
    }//GEN-LAST:event_txfSNameKeyTyped

    private void txfSNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfSNameActionPerformed
        btnInsert.doClick();
    }//GEN-LAST:event_txfSNameActionPerformed

    private void txfGradeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfGradeKeyTyped
        String fName = txfFName.getText();
        String sName = txfSName.getText();
        String grade = txfGrade.getText();
        char ch = evt.getKeyChar();
        if (Character.isDigit(ch)) {
            grade += ch;
        }
        searchAbsentLearner(fName, sName, grade);
    }//GEN-LAST:event_txfGradeKeyTyped

    private void txfGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfGradeActionPerformed
        btnInsert.doClick();
    }//GEN-LAST:event_txfGradeActionPerformed

    private void btnLearnersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLearnersActionPerformed
        dispose();
        LearnersTableGUI ctg = new LearnersTableGUI();
    }//GEN-LAST:event_btnLearnersActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        dispose();
        HomeGUI homeGUI = new HomeGUI();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnDetentionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetentionsActionPerformed
        dispose();
        DetentionsTableGUI dtg = new DetentionsTableGUI();
    }//GEN-LAST:event_btnDetentionsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDetentions;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnLearners;
    private javax.swing.JButton btnSaveAttendances;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCampaignName;
    private javax.swing.JLabel lblDescriptor;
    private javax.swing.JLabel lblDescriptor1;
    private javax.swing.JLabel lblDescriptor4;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblAbsentLearners;
    private javax.swing.JTable tblAttendedDetentions;
    private javax.swing.JScrollPane tblDonations2;
    private javax.swing.JTextField txfFName;
    private javax.swing.JTextField txfGrade;
    private javax.swing.JTextField txfSName;
    // End of variables declaration//GEN-END:variables

    private void searchAbsentLearner(String fName, String sName, String grade) {
        try {
            detentionLearnersInVector.clear();
            String sqlStatement = "SELECT tblLearner.FName, tblLearner.SName, tblLearner.Grade, COUNT(*) AS ['Number']\n"
                    + "FROM tblDetention, tblLearner\n"
                    + "WHERE tblLearner.LearnerID = tblDetention.LearnerID AND (OffenceID = 8) AND Attended = FALSE AND Enrolled = TRUE \n"
                    + "AND tblLearner.FName LIKE '" + fName + "*' AND tblLearner.SName LIKE '" + sName + "*' AND tblLearner.Grade LIKE '" + grade + "*'\n"
                    + "GROUP BY tblLearner.LearnerID, tblLearner.FName, tblLearner.SName, tblLearner.Grade\n"
                    + "ORDER BY tblLearner.Grade DESC, tblLearner.FName DESC, tblLearner.SName DESC;";
            ResultSet rs = DatabaseDriver.query(sqlStatement);
            ResultSetMetaData metaData = rs.getMetaData();
            int columnCount = metaData.getColumnCount();

            while (rs.next()) {
                Vector<Object> vector = new Vector<>();
                for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                    vector.add("" + rs.getObject(columnIndex));
                }
                detentionLearnersInVector.add(vector);
            }

            DefaultTableModel dtm = (DefaultTableModel) tblAttendedDetentions.getModel();
            dtm.setRowCount(0);
            Iterator<Vector<Object>> iterator = detentionLearnersInVector.iterator();
            while (iterator.hasNext()) {
                Vector<Object> currentRecord = (Vector<Object>) iterator.next();
                dtm.insertRow(0, currentRecord);
            }
            if (dtm.getRowCount() == 1) {
                btnInsert.setEnabled(true);
                btnInsert.setBackground(Color.green);
            } else {
                btnInsert.setEnabled(false);
            }
        } catch (SQLException ex) {
            Logger.getLogger(LearnersTableGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void populateAbsentLearnersTable() {
        absentLearnersInVector.clear();
        for (Learner n : absentLearners) {
            Vector<Object> vector = new Vector<>();
            vector.add(n.getFName());
            vector.add(n.getSName());
            vector.add(n.getGrade());
            absentLearnersInVector.add(vector);
        }

        DefaultTableModel dtm = (DefaultTableModel) tblAbsentLearners.getModel();
        dtm.setRowCount(0);
        Iterator<Vector<Object>> iterator = absentLearnersInVector.iterator();
        while (iterator.hasNext()) {
            Vector<Object> currentRecord = (Vector<Object>) iterator.next();
            dtm.insertRow(0, currentRecord);
        }

    }

}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIs;

import Controllers.DatabaseDriver;
import Controllers.FrameController;
import Controllers.Learner;
import Controllers.Mail;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rgalo
 */
public class OutboxGUI extends javax.swing.JFrame {

    private String fromEm, fromPa;
    private Vector<Vector<Object>> detentionLearnersInVector = new Vector<>();
    private Vector<Vector<Object>> absentLearnersInVector = new Vector<>();
    private ArrayList<Learner> absentLearners = new ArrayList<>();

    /**
     * Creates new form OutboxGUI
     */
    public OutboxGUI(String email, String pass) {
        this.fromEm = email;
        this.fromPa = pass;
        initComponents();
        populateTable("", "", "");
//        txfTo.setEnabled(false);
//        txfSubject.setEnabled(false);
//        txpMessage.setEnabled(false);
        btnSend.setEnabled(false);
        FrameController.setLayout(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMail = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txfTo = new javax.swing.JTextField();
        txfSubject = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txpMessage = new javax.swing.JTextPane();
        btnSend = new javax.swing.JButton();
        txfGrade = new javax.swing.JTextField();
        txfSName = new javax.swing.JTextField();
        lblFirstName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        txfFName = new javax.swing.JTextField();
        lblCampaignName = new javax.swing.JLabel();
        lblDescriptor = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        cmbActionTaken = new javax.swing.JComboBox();
        btnSave = new javax.swing.JButton();
        btnDetentions = new javax.swing.JButton();
        btnLearners = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        lblTitle.setText("Email Sender");

        tblMail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Surname", "Grade", "P Email", "S Email", "Accumulated", "Action taken"
            }
        ));
        jScrollPane1.setViewportView(tblMail);

        txfTo.setText("To:");
        txfTo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txfToFocusGained(evt);
            }
        });
        txfTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfToActionPerformed(evt);
            }
        });

        txfSubject.setText("Subject");
        txfSubject.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txfSubjectFocusGained(evt);
            }
        });

        jScrollPane2.setViewportView(txpMessage);

        btnSend.setText("Send is disabled until the build version has been updated");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        txfGrade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txfGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfGradeActionPerformed(evt);
            }
        });
        txfGrade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfGradeKeyTyped(evt);
            }
        });

        txfSName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txfSName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfSNameActionPerformed(evt);
            }
        });
        txfSName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfSNameKeyTyped(evt);
            }
        });

        lblFirstName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFirstName.setText("Surame: ");

        lblLastName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblLastName.setText("Grade:");

        txfFName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txfFName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfFNameActionPerformed(evt);
            }
        });
        txfFName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfFNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfFNameKeyTyped(evt);
            }
        });

        lblCampaignName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCampaignName.setText("First Name:");

        lblDescriptor.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblDescriptor.setText("Enter the learner details for action:");

        btnClear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnClear.setText("Clear Fields");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        cmbActionTaken.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbActionTaken.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1 None", "2 Warning at 3", "3 Inform of 5", "4 Appoint at 5", "5 Warning at 8", "6 Inform of 10", "7 Appoint at 10", "8 Disciplinary" }));

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSave.setText("Set as Action Taken");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfTo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSend, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txfSubject, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(lblDescriptor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblCampaignName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txfSName)
                            .addComponent(txfGrade)
                            .addComponent(txfFName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbActionTaken, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDescriptor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCampaignName)
                    .addComponent(txfFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txfSName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastName)
                    .addComponent(txfGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbActionTaken, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txfTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSend)
                .addContainerGap())
        );

        btnDetentions.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDetentions.setText("Detentions");
        btnDetentions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetentionsActionPerformed(evt);
            }
        });

        btnLearners.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLearners.setText("Learners");
        btnLearners.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLearnersActionPerformed(evt);
            }
        });

        btnHome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addComponent(btnLearners, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDetentions, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLearners)
                        .addComponent(btnDetentions)
                        .addComponent(btnHome)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txfToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfToActionPerformed

    private void txfToFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txfToFocusGained
        txfTo.setText("");
    }//GEN-LAST:event_txfToFocusGained

    private void txfSubjectFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txfSubjectFocusGained
        txfSubject.setText("");
    }//GEN-LAST:event_txfSubjectFocusGained

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        String to = txfTo.getText();
        String subj = txfSubject.getText();
        String mess = txpMessage.getText();
        Mail m = new Mail(fromEm, fromPa, to, subj, mess);
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnDetentionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetentionsActionPerformed
        dispose();
        DetentionsTableGUI dtg = new DetentionsTableGUI();
    }//GEN-LAST:event_btnDetentionsActionPerformed

    private void btnLearnersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLearnersActionPerformed
        dispose();
        LearnersTableGUI ctg = new LearnersTableGUI();
    }//GEN-LAST:event_btnLearnersActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        dispose();
        HomeGUI homeGUI = new HomeGUI();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void txfGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfGradeActionPerformed
        btnSave.doClick();
    }//GEN-LAST:event_txfGradeActionPerformed

    private void txfGradeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfGradeKeyTyped
        String fName = txfFName.getText();
        String sName = txfSName.getText();
        String grade = txfGrade.getText();
        char ch = evt.getKeyChar();
        if (Character.isDigit(ch)) {
            grade += ch;
        }
        populateTable(fName, sName, grade);
    }//GEN-LAST:event_txfGradeKeyTyped

    private void txfSNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfSNameActionPerformed
        btnSave.doClick();
    }//GEN-LAST:event_txfSNameActionPerformed

    private void txfSNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfSNameKeyTyped
        String fName = txfFName.getText();
        String sName = txfSName.getText();
        String grade = txfGrade.getText();
        char ch = evt.getKeyChar();
        if (Character.isLetter(ch) || ch == ' ') {
            sName += ch;
        }
        populateTable(fName, sName, grade);
    }//GEN-LAST:event_txfSNameKeyTyped

    private void txfFNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfFNameActionPerformed
        btnSave.doClick();
    }//GEN-LAST:event_txfFNameActionPerformed

    private void txfFNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfFNameKeyPressed

    }//GEN-LAST:event_txfFNameKeyPressed

    private void txfFNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfFNameKeyTyped
        String fName = txfFName.getText();
        String sName = txfSName.getText();
        String grade = txfGrade.getText();
        char ch = evt.getKeyChar();
        if (Character.isLetter(ch) || ch == ' ') {
            fName += ch;
        }
        populateTable(fName, sName, grade);
    }//GEN-LAST:event_txfFNameKeyTyped

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txfFName.setText("");
        txfSName.setText("");
        txfGrade.setText("");
        txfFName.requestFocus();
        populateTable("", "", "");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String selectedItem = ("" + cmbActionTaken.getSelectedItem()).substring(0, 1);
        System.out.println(selectedItem);
        String fName = txfFName.getText();
        String sName = txfSName.getText();
        String grade = txfGrade.getText();
        String sqlTookAction = "UPDATE tblLearner\n"
                + "SET ActionTaken = " + selectedItem + "\n"
                + "WHERE FName LIKE '" + fName + "*'\n"
                + "AND SName LIKE '" + sName + "*'\n"
                + "AND Grade LIKE '" + grade + "*'\n"
                + "AND Enrolled = TRUE;";
        int update = DatabaseDriver.update(sqlTookAction);
        System.out.println(update);
        btnClear.doClick();
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDetentions;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLearners;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSend;
    private javax.swing.JComboBox cmbActionTaken;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCampaignName;
    private javax.swing.JLabel lblDescriptor;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblMail;
    private javax.swing.JTextField txfFName;
    private javax.swing.JTextField txfGrade;
    private javax.swing.JTextField txfSName;
    private javax.swing.JTextField txfSubject;
    private javax.swing.JTextField txfTo;
    private javax.swing.JTextPane txpMessage;
    // End of variables declaration//GEN-END:variables

    private void populateTable(String fName, String sName, String grade) {
        try {
            Vector<Vector<Object>> detentionsIV = new Vector<>();

            String sql3 = "SELECT tblLearner.FName, tblLearner.SName, tblLearner.Grade, PEmail, SEmail, COUNT(*) AS NumberAccumulated, ActionDescription\n"
                    + "FROM tblDetention, tblLearner, tblAction\n"
                    + "WHERE tblDetention.LearnerID = tblLearner.LearnerID\n"
                    + "AND tblAction.ID = ActionTaken\n"
                    + "AND Enrolled = TRUE \n"
                    + "AND FName LIKE '" + fName + "*'\n"
                    + "AND SName LIKE '" + sName + "*'\n"
                    + "AND Grade LIKE '" + grade + "*'\n"
                    + "AND ActionTaken < 2\n"
                    + "GROUP BY tblLearner.FName, tblLearner.SName, tblLearner.Grade, PEmail, SEmail, ActionDescription\n"
                    + "HAVING COUNT(*) > 2;";
            ResultSet rs3Warning = DatabaseDriver.query(sql3);
            ResultSetMetaData metaData3 = rs3Warning.getMetaData();
            int columnCount3 = metaData3.getColumnCount();
            while (rs3Warning.next()) {
                Vector<Object> vector = new Vector<>();
                for (int columnIndex = 1; columnIndex <= columnCount3; columnIndex++) {
                    vector.add("" + rs3Warning.getObject(columnIndex));
                }
                detentionsIV.add(vector);
            }

            String sql5 = "SELECT tblLearner.FName, tblLearner.SName, tblLearner.Grade, PEmail, SEmail, COUNT(*) AS NumberAccumulated, ActionDescription\n"
                    + "FROM tblDetention, tblLearner, tblAction\n"
                    + "WHERE tblDetention.LearnerID = tblLearner.LearnerID\n"
                    + "AND tblAction.ID = ActionTaken\n"
                    + "AND Enrolled = TRUE \n"
                    + "AND FName LIKE '" + fName + "*'\n"
                    + "AND SName LIKE '" + sName + "*'\n"
                    + "AND Grade LIKE '" + grade + "*'\n"
                    + "AND ActionTaken < 4\n"
                    + "GROUP BY tblLearner.FName, tblLearner.SName, tblLearner.Grade, PEmail, SEmail, ActionDescription\n"
                    + "HAVING COUNT(*) >= 5;";
            ResultSet rsFridaysNeedAction = DatabaseDriver.query(sql5);
            ResultSetMetaData metaData = rsFridaysNeedAction.getMetaData();
            int columnCount = metaData.getColumnCount();
            while (rsFridaysNeedAction.next()) {
                Vector<Object> vector = new Vector<>();
                for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                    vector.add("" + rsFridaysNeedAction.getObject(columnIndex));
                }
                detentionsIV.add(vector);
            }
            String sql8 = "SELECT tblLearner.FName, tblLearner.SName, tblLearner.Grade, PEmail, SEmail, COUNT(*) AS NumberAccumulated, ActionDescription\n"
                    + "FROM tblDetention, tblLearner, tblAction\n"
                    + "WHERE tblDetention.LearnerID = tblLearner.LearnerID\n"
                    + "AND tblAction.ID = ActionTaken\n"
                    + "AND Enrolled = TRUE \n"
                    + "AND FName LIKE '" + fName + "*'\n"
                    + "AND SName LIKE '" + sName + "*'\n"
                    + "AND Grade LIKE '" + grade + "*'\n"
                    + "AND ActionTaken < 5\n"
                    + "GROUP BY tblLearner.FName, tblLearner.SName, tblLearner.Grade, PEmail, SEmail, ActionDescription\n"
                    + "HAVING COUNT(*) >= 8;";
            ResultSet rs8 = DatabaseDriver.query(sql8);
            ResultSetMetaData metaData8 = rs8.getMetaData();
            int columnCount8 = metaData8.getColumnCount();
            while (rs8.next()) {
                Vector<Object> vector = new Vector<>();
                for (int columnIndex = 1; columnIndex <= columnCount8; columnIndex++) {
                    vector.add("" + rs8.getObject(columnIndex));
                }
                detentionsIV.add(vector);
            }
            String sql10 = "SELECT tblLearner.FName, tblLearner.SName, tblLearner.Grade, PEmail, SEmail, COUNT(*) AS NumberAccumulated, ActionDescription\n"
                    + "FROM tblDetention, tblLearner, tblAction\n"
                    + "WHERE tblDetention.LearnerID = tblLearner.LearnerID\n"
                    + "AND tblAction.ID = ActionTaken\n"
                    + "AND Enrolled = TRUE \n"
                    + "AND FName LIKE '" + fName + "*'\n"
                    + "AND SName LIKE '" + sName + "*'\n"
                    + "AND Grade LIKE '" + grade + "*'\n"
                    + "AND ActionTaken < 7\n"
                    + "GROUP BY tblLearner.FName, tblLearner.SName, tblLearner.Grade, PEmail, SEmail, ActionDescription\n"
                    + "HAVING COUNT(*) >= 10;";
            ResultSet rs10 = DatabaseDriver.query(sql10);
            ResultSetMetaData metaData10 = rs10.getMetaData();
            int columnCount10 = metaData10.getColumnCount();
            while (rs10.next()) {
                Vector<Object> vector = new Vector<>();
                for (int columnIndex = 1; columnIndex <= columnCount10; columnIndex++) {
                    vector.add("" + rs10.getObject(columnIndex));
                }
                detentionsIV.add(vector);
            }
            String sql12 = "SELECT tblLearner.FName, tblLearner.SName, tblLearner.Grade, PEmail, SEmail, COUNT(*) AS NumberAccumulated, ActionDescription\n"
                    + "FROM tblDetention, tblLearner, tblAction\n"
                    + "WHERE tblDetention.LearnerID = tblLearner.LearnerID\n"
                    + "AND tblAction.ID = ActionTaken\n"
                    + "AND Enrolled = TRUE \n"
                    + "AND FName LIKE '" + fName + "*'\n"
                    + "AND SName LIKE '" + sName + "*'\n"
                    + "AND Grade LIKE '" + grade + "*'\n"
                    + "AND ActionTaken < 8 \n"
                    + "GROUP BY tblLearner.FName, tblLearner.SName, tblLearner.Grade, PEmail, SEmail, ActionDescription\n"
                    + "HAVING COUNT(*) >= 12;";
            ResultSet rs12 = DatabaseDriver.query(sql12);
            ResultSetMetaData metaData12 = rs12.getMetaData();
            int columnCount12 = metaData12.getColumnCount();
            while (rs12.next()) {
                Vector<Object> vector = new Vector<>();
                for (int columnIndex = 1; columnIndex <= columnCount12; columnIndex++) {
                    vector.add("" + rs12.getObject(columnIndex));
                }
                detentionsIV.add(vector);
            }

            DefaultTableModel dtm = (DefaultTableModel) tblMail.getModel();
            dtm.setRowCount(0);
            Iterator<Vector<Object>> iterator = detentionsIV.iterator();
            while (iterator.hasNext()) {
                Vector<Object> currentRecord = (Vector<Object>) iterator.next();
                dtm.insertRow(0, currentRecord);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "SQL Exception\n" + ex, "Invalid Input Error", ERROR_MESSAGE);
        }

    }
}
